{
  "name": "flash-sale-backend",
  "version": "0.0.1",
  "description": "",
  "author": "",
  "private": true,
  "license": "UNLICENSED",
  "scripts": {
    "build": "nest build",
    "format": "prettier --write \"src/**/*.ts\" \"test/**/*.ts\"",
    "start": "nest start",
    "start:dev": "nest start --watch",
    "start:debug": "nest start --debug --watch",
    "start:prod": "node dist/main",
    "lint": "eslint \"{src,apps,libs,test}/**/*.ts\" --fix",
    "test": "jest",
    "test:watch": "jest --watch",
    "test:cov": "jest --coverage",
    "test:debug": "node --inspect-brk -r tsconfig-paths/register -r ts-node/register node_modules/.bin/jest --runInBand",
    "test:e2e": "jest --config ./test/jest-e2e.json",
    "typeorm": "typeorm-ts-node-commonjs",
    "migration:generate": "npm run typeorm -- migration:generate -d typeorm.config.ts",
    "migration:run": "npm run typeorm -- migration:run -d typeorm.config.ts",
    "migration:revert": "npm run typeorm -- migration:revert -d typeorm.config.ts",
    "schema:drop": "npm run typeorm -- schema:drop -d typeorm.config.ts",
    "seed": "ts-node -r tsconfig-paths/register scripts/seed.ts",
    "db:setup": "npm run migration:run && npm run seed",
    "loadtest": "artillery run load-test/artillery.yml --output load-test/results/flash-sale-basic.json",
    "loadtest:extreme": "artillery run load-test/flash-sale-extreme.yml --output load-test/results/flash-sale-extreme.json", 
    "loadtest:balanced": "artillery run load-test/flash-sale-balanced.yml --output load-test/results/flash-sale-balanced.json",
    "loadtest:setup": "./scripts/setup-flash-sale-test.sh",
    "loadtest:visual": "artillery run load-test/artillery.yml --output load-test/results/flash-sale-visual.json && artillery report load-test/results/flash-sale-visual.json --output load-test/reports/flash-sale-visual.html",
    "loadtest:balanced-visual": "artillery run load-test/flash-sale-balanced.yml --output load-test/results/flash-sale-balanced-visual.json && artillery report load-test/results/flash-sale-balanced-visual.json --output load-test/reports/flash-sale-balanced-visual.html",
    "loadtest:extreme-visual": "artillery run load-test/flash-sale-extreme.yml --output load-test/results/flash-sale-extreme-visual.json && artillery report load-test/results/flash-sale-extreme-visual.json --output load-test/reports/flash-sale-extreme-visual.html",
    "contention:setup": "./scripts/setup-contention-test.sh",
    "contention:hyper": "artillery run load-test/flash-sale-hypercontention.yml --output load-test/results/hypercontention.json",
    "contention:limited": "artillery run load-test/flash-sale-limited-stock.yml --output load-test/results/limited-stock.json",
    "contention:single-unit": "artillery run load-test/flash-sale-single-unit.yml --output load-test/results/single-unit.json",
    "contention:hyper-visual": "artillery run load-test/flash-sale-hypercontention.yml --output load-test/results/hypercontention-visual.json && artillery report load-test/results/hypercontention-visual.json --output load-test/reports/hypercontention.html",
    "contention:limited-visual": "artillery run load-test/flash-sale-limited-stock.yml --output load-test/results/limited-stock-visual.json && artillery report load-test/results/limited-stock-visual.json --output load-test/reports/limited-stock.html",
    "contention:single-unit-visual": "artillery run load-test/flash-sale-single-unit.yml --output load-test/results/single-unit-visual.json && artillery report load-test/results/single-unit-visual.json --output load-test/reports/single-unit.html",
    "contention:full-test": "npm run contention:setup && npm run contention:hyper-visual && npm run contention:limited-visual && npm run contention:single-unit-visual",
    "flash-sale:test": "npm run loadtest:setup && npm run loadtest:extreme",
    "flash-sale:balanced": "npm run loadtest:setup && npm run loadtest:balanced-visual && open load-test/reports/flash-sale-balanced-visual.html",
    "flash-sale:visual": "npm run loadtest:setup && npm run loadtest:visual && open load-test/reports/flash-sale-visual.html",
    "flash-sale:extreme-visual": "npm run loadtest:setup && npm run loadtest:extreme-visual && open load-test/reports/flash-sale-extreme-visual.html",
    "flash-sale:monitor": "echo 'ðŸ”¥ Opening Flash Sale Real-Time Monitor...' && open monitoring/flash-sale-monitor.html && echo 'Monitor opened! Start your app with npm run start:dev to see live data.'",
    "grafana:dashboard": "echo 'ðŸ“Š Opening Grafana Dashboard...' && open 'http://localhost:3000/d/flash-sale/flash-sale-monitoring' && echo 'Grafana dashboard opened!'",
    "monitoring:all": "npm run flash-sale:monitor && npm run grafana:dashboard",
    "analyze:results": "./scripts/analyze-flash-sale-results.sh"
  },
  "dependencies": {
    "@nestjs/bullmq": "^11.0.3",
    "@nestjs/common": "^11.0.1",
    "@nestjs/config": "^4.0.2",
    "@nestjs/core": "^11.0.1",
    "@nestjs/platform-express": "^11.0.1",
    "@nestjs/platform-socket.io": "^11.1.6",
    "@nestjs/throttler": "^6.4.0",
    "@nestjs/typeorm": "^11.0.0",
    "bullmq": "^5.58.8",
    "class-transformer": "^0.5.1",
    "class-validator": "^0.14.2",
    "ioredis": "^5.8.0",
    "pg": "^8.16.3",
    "redis": "^5.8.2",
    "reflect-metadata": "^0.2.2",
    "rxjs": "^7.8.1",
    "typeorm": "^0.3.27"
  },
  "devDependencies": {
    "@eslint/eslintrc": "^3.2.0",
    "@eslint/js": "^9.18.0",
    "@nestjs/cli": "^11.0.0",
    "@nestjs/schematics": "^11.0.0",
    "@nestjs/testing": "^11.0.1",
    "@types/express": "^5.0.0",
    "@types/jest": "^30.0.0",
    "@types/node": "^22.10.7",
    "@types/supertest": "^6.0.2",
    "eslint": "^9.18.0",
    "eslint-config-prettier": "^10.0.1",
    "eslint-plugin-prettier": "^5.2.2",
    "globals": "^16.0.0",
    "jest": "^30.0.0",
    "prettier": "^3.4.2",
    "source-map-support": "^0.5.21",
    "supertest": "^7.0.0",
    "ts-jest": "^29.2.5",
    "ts-loader": "^9.5.2",
    "ts-node": "^10.9.2",
    "tsconfig-paths": "^4.2.0",
    "typescript": "^5.7.3",
    "typescript-eslint": "^8.20.0"
  },
  "jest": {
    "moduleFileExtensions": [
      "js",
      "json",
      "ts"
    ],
    "rootDir": "src",
    "testRegex": ".*\\.spec\\.ts$",
    "transform": {
      "^.+\\.(t|j)s$": "ts-jest"
    },
    "collectCoverageFrom": [
      "**/*.(t|j)s"
    ],
    "coverageDirectory": "../coverage",
    "testEnvironment": "node"
  }
}
